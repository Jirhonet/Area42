@page
@namespace A42.Planning.WebApp.Pages
@using A42.Planning.Domain
@model IndexModel
@{
    ViewData["Title"] = "Planning";
}

<div class="text-center">
    <h1 class="display-4">Planning</h1>
</div>

<form method="get">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="SelectedDate">Date</label>
                <input asp-for="SelectedDate" type="date" class="form-control" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="SelectedTeamId">Team</label>
                <select asp-for="SelectedTeamId" asp-items="Model.Teams" class="form-control">
                    <option value="">-- Select Team --</option>
                </select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>&nbsp;</label>
                <button type="submit" class="btn btn-primary form-control">Search</button>
            </div>
        </div>
    </div>
</form>

<hr />

@if (Model.Planning != null)
{
    <div class="toolbar d-flex gap-2">
        <button onclick="showDialog()">+ Add</button>
        <form method="POST" asp-page-handler="Delete">
            <input type="hidden" name="selectedLocationId" value="@Model.SelectedPlanningItemId" />
            <button type="submit" @(Model.SelectedPlanningItemId.HasValue ? "" : "disabled") class="destructive">- Delete</button>
        </form>
    </div>

    <ul class="list-group header">
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span>Title</span>
            <span>Location</span>
            <span>Start</span>
            <span>End</span>
        </li>
    </ul>

    @if (Model.Planning.Items != null && Model.Planning.Items.Any())
    {
        <ul class="list-group">
            @foreach (PlanningItem item in Model.Planning.Items.OrderBy(p => p.Start))
            {
                <li class="list-group-item p-0 overflow-hidden">
                    <form method="POST" asp-page-handler="Select" style="margin:0;">
                        <input type="hidden" name="selectedPlanningItemId" value="@item.Id" />
                        <input type="hidden" name="selectedTeamId" value="@Model.SelectedTeamId" />
                        <input type="hidden" name="selectedDate" value="@Model.SelectedDate" />
                        <button type="submit"
                                class="list-group-item d-flex justify-content-between align-items-center w-100 text-start"
                                style="border:none; background: @(item.Id == Model.SelectedPlanningItemId ? "#e0e0e0" : "white"); padding: 0.75rem 1.25rem;">
                            <span>@item.Title</span>
                            <span>@item.Location.Name</span>
                            <span>@item.Start.ToString("HH:mm")</span>
                            <span>@item.End.ToString("HH:mm")</span>
                        </button>
                    </form>
                </li>
            }
        </ul>
    }
    else
    {
        <p class="w-100 text-center">No planned items found.</p>
    }
}

<form method="POST" id="dialog" class="dialog" style="display: none;">
    <div class="d-flex justify-content-between">
        <p><b>Add a new item</b></p>
        <button type="button" class="close-button" onclick="hideDialog()">✖</button>
    </div>
    <label for="title">Title</label>
    <input type="text" id="title" name="title" placeholder="New item">
    <label for="SelectedLocationId">Location</label>
    <select asp-for="SelectedLocationId" asp-items="Model.Locations" class="form-control">
        <option value="">-- Select Location --</option>
    </select>
    <label for="start">Start Time</label>
    <input type="time" id="start" name="start" required>
    <label for="end">End Time</label>
    <input type="time" id="end" name="end" required>
    <br />
    <input type="submit" onclick="hideDialog()" value="Add">
</form>

<script>
    function showDialog() {
        document.getElementById("dialog").style.display = "flex";
    }

    function hideDialog() {
        document.getElementById("dialog").style.display = "none";
    }
</script>


@if (!string.IsNullOrEmpty(Model.Error))
{
    <script>
        window.onload = function () {
            alert("@Model.Error");
        }
    </script>
}